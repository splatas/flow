image: node:10-alpine
cache:
  key: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}"
  untracked: true
  paths:
    - node_modules/

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DEPLOY_TOKEN: "gitlab+deploy-token-14:Ftfs58bYKnybeW8LY511"

before_script:
  - wget -O- https://www.google.com.ar/
  - echo NODE_ENV $NODE_ENV
  - echo CI_COMMIT_TAG $CI_COMMIT_TAG
  - echo CI_PROJECT_NAME $CI_PROJECT_NAME
  - echo CI_COMMIT_REF_NAME $CI_COMMIT_REF_NAME
  - if [ "$NODE_ENV" == "" ]; then NODE_ENV=$CI_COMMIT_REF_NAME; fi
  - >-
    if [ "$NODE_ENV" == "develop" -o "$NODE_ENV" == "prod" ];
      then echo "nice im at ${NODE_ENV}!";
      else if [ "$NODE_ENV" == "master" ];
      then
        NODE_ENV=staging;
      else
        NODE_ENV=preprod;
      fi;
    fi
  - CIPROJNAME=$CI_PROJECT_NAME
  - if [ "$CIPROJNAME" == "api_gateway" ]; then CIPROJNAME="api-gateway"; fi
  - apk add git
  - git checkout $CI_COMMIT_REF_NAME
  - if [ "$CI_COMMIT_REF_NAME" == "develop" -o "$CI_COMMIT_REF_NAME" == "master" ]; then git pull ; fi

stages:
  - test
  - deploy
  - openapi
  - release

test:
  stage: test
  only:
    - develop
    - master
    - tags
  script:
    - cd config
    - FILE=variables.js
    - test -f "$FILE" || ln -s variables.${NODE_ENV}.js "$FILE";
    - cd ..
    - npm i && CACHE_REDIS=no npm t

deploy:
  stage: deploy
  only:
    - develop
    - master
    - tags
  script:
    - if [ "$ONLY_TEST" == "1" ]; then exit 0; fi
    - cp /root/extrakeys/nodejs_id_rsa* ..
    - >
      sed -ri $'s/repositoryUrl: \`git@([a-zA-Z0-9\.]+):/repositoryUrl:\`http:\\/\\/'$DEPLOY_TOKEN$'@\\1\\//' static/shipitfile.js
    - grep repositoryUrl static/shipitfile.js
    - apk add openssh rsync
    - npm i shipit-cli shipit-deploy
    - DEPLOY_TESTS=no DEPLOY_BRANCH=$CI_COMMIT_REF_NAME npx shipit $NODE_ENV deploy --shipitfile static/shipitfile.js

openapi:
  stage: openapi
  only:
    - develop
    - master
    - tags
  script:
    - if [ "$ONLY_TEST" == "1" ]; then exit 0; fi
    - echo node env $NODE_ENV
    - apk add curl
    - npm i
    - NODE_ENV=$NODE_ENV ./static/openapi.js > "${CIPROJNAME}_${NODE_ENV}".json
    - echo F '=@'"${CIPROJNAME}_${NODE_ENV}"'.json' https://10.254.244.112/swagger-shiva/v1/upload
    - unset https_proxy
    - curl -F '=@'"${CIPROJNAME}_${NODE_ENV}"'.json' -k https://dev:carlinkaker@10.254.244.112/swagger-shiva/v1/upload
    - curl -F '=@'"${CIPROJNAME}_${NODE_ENV}"'.json' -k https://dev:carlinkaker@10.254.244.113/swagger-shiva/v1/upload
    - >-
      if [ "$CI_COMMIT_REF_NAME" == "develop" -o "$CI_COMMIT_REF_NAME" == "master" ];
        then curl -H 'Content-Type: application/json' https://gw-ff-dev.cablevisionflow.com.ar/hermes/notification -d '
        {
          "branch": "'$CI_COMMIT_REF_NAME'",
          "nodeEnv": "'$NODE_ENV'",
          "project": "'$CI_PROJECT_NAME'"
        }
        '
      fi

release:
  stage: release
  only:
    - tags
  script:
    - apk add curl
    - echo CI_PROJECT_NAME $CI_PROJECT_NAME
    - echo CI_COMMIT_REF_NAME $CI_COMMIT_REF_NAME
    - >-
      curl -H 'Content-Type: application/json' http://10.200.172.71/doc/v2/upload -d '
      {
        "channel": "deploys",
        "repo": "backend/'$CI_PROJECT_NAME'",
        "to": "'$CI_COMMIT_REF_NAME'"
      }
      '
